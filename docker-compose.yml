# 🚀 Docker Compose configuration for KD Race App
# Services: API backend, frontend builder (via pnpm), and Nginx reverse proxy

services:
  # 🐴 API service – Node.js + Express + Prisma backend
  kd_api:
    build:
      context: ./api                    # 📂 Path to API source folder
      dockerfile: Dockerfile           # 🛠 Custom Dockerfile for Node.js/Prisma
      args:
        NODE_ENV: production           # 🔧 Passed to build stage

    container_name: kd_api
    working_dir: /usr/src/app          # 📁 Must match Dockerfile WORKDIR
    user: "node"                       # 👤 Run as non-root user for safety

    # Optional: Mount code during local dev
    # volumes:
    #   - ./api:/usr/src/app:cached

    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://derby_admin:${DB_PASS}@192.168.50.209:5432/derby
      - API_ADMIN_PASS=${API_ADMIN_PASS}  # 🔐 Used to protect admin-only routes

    ports:
      - "4000:4000"                    # 🌍 REST + WebSocket
      - "5555:5555"                    # 🔍 Optional: Prisma Studio

    restart: unless-stopped
    networks:
      - kd_net

  # ⚙️ Frontend builder – builds Vite app using pnpm and outputs to Nginx volume
  kd_frontend_builder:
    image: node:20
    container_name: kd_frontend_builder
    working_dir: /usr/src/app
    user: "root"                       # Needed to chown output folder

    volumes:
      - ./frontend:/usr/src/app         # 🧱 Mount Vite + React project
      - /websites/kd_race_app:/output   # 📤 Target folder served by Nginx

    command: >
      bash -c "
        corepack enable &&                                              # 🧩 Enable Node's built-in package manager support
        corepack prepare pnpm@8.15.4 --activate &&                      # ⏬ Install and activate specified pnpm version
        rm -rf node_modules dist .vite .vite-temp package-lock.json && # 🧹 Full cleanup of old build artifacts
        pnpm install --no-frozen-lockfile &&                            # ✅ Install dependencies without requiring a lockfile
        pnpm run build &&                                               # 🛠 Build production frontend with Vite
        cp -r dist/* /output &&                                         # 🚚 Move built files to shared output mount
        chown -R 1007:1003 /output                                      # 🔐 Ensure correct permissions for Nginx
      "

    restart: on-failure
    networks:
      - kd_net

  # 🌐 Nginx – serves frontend and proxies backend API/WebSocket traffic
  kd_nginx:
    build:
      context: ./nginx               # 📁 Contains Dockerfile and kd.conf
      dockerfile: Dockerfile

    container_name: kd_nginx
    depends_on:
      - kd_api                      # ⏱ Ensure API is up before proxying requests

    ports:
      - "8086:80"                   # 🌐 Host HTTP port (Cloudflare handles HTTPS)

    volumes:
      - /websites/kd_race_app:/usr/share/nginx/html:ro     # 📦 Static files from builder
      - ./nginx/kd.conf:/etc/nginx/conf.d/default.conf:ro  # ⚙️ Custom routing and proxy config

    restart: unless-stopped
    networks:
      - kd_net

# 🔌 Shared bridge network for internal communication
networks:
  kd_net:
    name: kd_net
    driver: bridge
