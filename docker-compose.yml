# 🚀 Docker Compose configuration for KD Race App
# Services: API backend, frontend builder, and Nginx reverse proxy

services:
  # 🐴 kd_api – Node.js + Express + Prisma backend
  kd_api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        NODE_ENV: production

    container_name: kd_api
    working_dir: /usr/src/app
    user: "node"  # 👤 Non-root user for safer volume writes

    # Optional: enable during local development
    # volumes:
    #   - ./api:/usr/src/app:cached

    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://derby_admin:${DB_PASS}@192.168.50.209:5432/derby
      - API_ADMIN_PASS=${API_ADMIN_PASS}

    ports:
      - "4000:4000"  # REST & WebSocket
      - "5555:5555"  # Optional: Prisma Studio

    restart: unless-stopped
    networks:
      - kd_net

  # ⚙️ kd_frontend_builder – compiles Vite frontend using pnpm
  kd_frontend_builder:
    image: node:20
    container_name: kd_frontend_builder
    working_dir: /usr/src/app
    user: "root"  # 👷 Required to handle file ownership correction

    volumes:
      - type: volume
        source: frontend_node_modules
        target: /usr/src/app/node_modules
      - type: volume
        source: frontend_cache
        target: /usr/src/app/.pnpm-store
      - ./frontend:/usr/src/app:cached         # Editable React + Vite project
      - /websites/kd_race_app:/output           # Output directory for final built assets

    environment:
      COREPACK_ENABLE_STRICT: "0"     # Prevents prompts
      NODE_OPTIONS: "--no-warnings"   # Silences benign warnings

    command: >
      bash -c "
        echo '🧹 Cleaning up old files (as root)...' &&
        rm -rf /usr/src/app/dist /usr/src/app/.vite /usr/src/app/.vite-temp /output/* &&

        echo '🔧 Fixing ownership of workspace to media-apps (PUID=1007, PGID=1003)...' &&
        chown -R 1007:1003 /usr/src/app /output &&

        echo '🛆 Installing deps and building as non-root user...' &&
        su node -c 'corepack enable && \
                    corepack prepare pnpm@8.15.4 --activate && \
                    pnpm install --no-frozen-lockfile && \
                    pnpm run build && \
                    cp -r dist/* /output' &&

        echo '✅ Build complete'
      "

    restart: on-failure
    networks:
      - kd_net

  # 🌐 kd_nginx – serves frontend and proxies backend API/WebSocket
  kd_nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile

    container_name: kd_nginx
    depends_on:
      - kd_api

    ports:
      - "8086:80"  # External HTTP port

    volumes:
      - /websites/kd_race_app:/usr/share/nginx/html:ro     # 📆 Built frontend
      - ./nginx/kd.conf:/etc/nginx/conf.d/default.conf:ro  # ⚖️ Custom routing config

    restart: unless-stopped
    networks:
      - kd_net

# 🔌 Shared Docker network
networks:
  kd_net:
    name: kd_net
    driver: bridge

# 🩱 Volumes to isolate cached dependencies and store
volumes:
  frontend_node_modules:
  frontend_cache:
