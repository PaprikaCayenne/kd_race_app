services:
  # üê¥ Node.js API service for race logic & database access
  kd_api:
    build:
      context: ./api                             # Build from the ./api folder
      args:
        NODE_ENV: development                    # Build-time environment variable
    container_name: kd_api
    working_dir: /usr/src/app                    # Set working directory inside the container
    command: sh -c "npx prisma generate && npm run dev"  # Generate Prisma client & run dev server
    volumes:
      - ./api:/usr/src/app                       # Mount API source code and schema
      - kd_api_node_modules:/usr/src/app/node_modules  # Prevent node_modules conflicts
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://derby_admin:${DB_PASS}@192.168.50.209:5432/derby  # Postgres connection
      - API_ADMIN_PASS=${API_ADMIN_PASS}         # Admin password for race control
    ports:
      - "4000:4000"                              # Expose API (REST + WebSocket)
      - "5555:5555"                              # Optional: Prisma Studio
    restart: unless-stopped                      # Restart container unless explicitly stopped
    networks:
      - kd_net

  # ‚öôÔ∏è Frontend builder ‚Äî compiles Vite React app once on startup
  kd_frontend_builder:
    image: node:20                               # Use official Node 20 image
    container_name: kd_frontend_builder
    working_dir: /usr/src/app
    volumes:
      - ./frontend:/usr/src/app                  # Mount Vite frontend source
      - /websites/kd_race_app:/output            # Output directory for compiled static files
    command: bash -c "npm install && npm run build && cp -r dist/* /output"  # Build and export
    restart: on-failure                          # Retry once if build fails
    networks:
      - kd_net

  # üåê Nginx container for serving the frontend & proxying API/WebSocket
  kd_nginx:
    build:
      context: ./nginx                           # Build from custom Nginx Dockerfile
    container_name: kd_nginx
    depends_on:
      - kd_api                                   # Ensure API is ready before starting Nginx
    ports:
      - "8086:80"                                # Public port for full app access
    volumes:
      - /websites/kd_race_app:/usr/share/nginx/html:ro  # Serve built frontend from here
      - ./nginx/kd.conf:/etc/nginx/conf.d/default.conf:ro  # Custom Nginx proxy config
    restart: unless-stopped
    networks:
      - kd_net

# üîå Network for internal container communication (e.g., Nginx ‚Üí API)
networks:
  kd_net:
    name: kd_net
    driver: bridge

# üì¶ Persistent volume to isolate node_modules for API
volumes:
  kd_api_node_modules:
