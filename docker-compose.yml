services:
  # üê¥ Node.js API service ‚Äì handles race logic, user registration, and DB access
  kd_api:
    build:
      context: ./api                               # Build from the ./api directory
      dockerfile: Dockerfile                       # Use custom Dockerfile with Prisma fix
      args:
        NODE_ENV: development                      # Pass env to Dockerfile for conditional install
    container_name: kd_api
    working_dir: /usr/src/app                      # Match WORKDIR in Dockerfile
    command: npm run dev                           # ‚úÖ Simplified: Prisma client is already generated in Dockerfile
    volumes:
      - ./api:/usr/src/app:cached
      - /usr/src/app/node_modules          # ‚úÖ Mount an empty internal path to preserve built node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://derby_admin:${DB_PASS}@192.168.50.209:5432/derby
      - API_ADMIN_PASS=${API_ADMIN_PASS}
    ports:
      - "4000:4000"                                # REST + WebSocket
      - "5555:5555"                                # Prisma Studio (optional)
    restart: unless-stopped
    networks:
      - kd_net

  # ‚öôÔ∏è Frontend builder ‚Äì compiles Vite app and copies static files to /output
  kd_frontend_builder:
    image: node:20                                 # Official Node image
    container_name: kd_frontend_builder
    working_dir: /usr/src/app
    volumes:
      - ./frontend:/usr/src/app                    # Mount frontend source code
      - /websites/kd_race_app:/output              # Output dir for compiled static files
      - node_modules_build_cache:/usr/src/app/node_modules  # Prevent host permission issues
    command: bash -c "npm install && npm run build && cp -r dist/* /output"
    restart: on-failure
    networks:
      - kd_net

  # üåê Nginx ‚Äì serves frontend and proxies API/WebSocket traffic
  kd_nginx:
    build:
      context: ./nginx
    container_name: kd_nginx
    depends_on:
      - kd_api                                     # Ensure API is up before starting Nginx
    ports:
      - "8086:80"                                  # Public app access via Cloudflare/NPM
    volumes:
      - /websites/kd_race_app:/usr/share/nginx/html:ro  # Serve built frontend
      - ./nginx/kd.conf:/etc/nginx/conf.d/default.conf:ro  # Custom proxy config
    restart: unless-stopped
    networks:
      - kd_net

# üîå Shared internal network for containers
networks:
  kd_net:
    name: kd_net
    driver: bridge

# üì¶ Only used for frontend node_modules cache (not API)
volumes:
  node_modules_build_cache:
