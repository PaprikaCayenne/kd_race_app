services:
  # üê¥ Node.js API service for the race backend
  kd_api:
    build:
      context: ./api                            # Build from the ./api folder using its Dockerfile
      args:
        NODE_ENV: development                   # Pass NODE_ENV as a build argument
    container_name: kd_api
    working_dir: /usr/src/app
    command: sh -c "npx prisma generate && npm run dev"  # Ensure Prisma client is generated on container start
    volumes:
      - ./api:/usr/src/app                      # Bind-mount the entire ./api directory for live code + schema access
      - kd_api_node_modules:/usr/src/app/node_modules  # Keep node_modules isolated from host system
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://derby_admin:${DB_PASS}@192.168.50.209:5432/derby
      - API_ADMIN_PASS=${API_ADMIN_PASS}
    ports:
      - "4000:4000"
    restart: unless-stopped
    networks:
      - kd_net

  # üß± Frontend builder container (run manually or with --profile build)
  kd_frontend_builder:
    image: node:20
    container_name: kd_frontend_builder
    working_dir: /usr/src/app
    volumes:
      - ./frontend:/usr/src/app                 # Mount the React frontend source
      - /websites/kd_race_app:/output           # Output directory for built files
    command: bash -c "npm install && npm run build && cp -r build/* /output"
    restart: on-failure
    networks:
      - kd_net

  # üåê Nginx server to host frontend and proxy backend/API
  kd_nginx:
    build:
      context: ./nginx
    container_name: kd_nginx
    depends_on:
      - kd_api
    ports:
      - "8086:80"                                # Public port to access the app
    volumes:
      - /websites/kd_race_app:/usr/share/nginx/html:ro  # Serve the built frontend
      - ./nginx/kd.conf:/etc/nginx/conf.d/default.conf:ro  # Proxy /api and /race (ws) to backend
    restart: unless-stopped
    networks:
      - kd_net

# üîå Docker internal network
networks:
  kd_net:
    name: kd_net
    driver: bridge

# üì¶ Volumes for isolated development
volumes:
  kd_api_node_modules:
