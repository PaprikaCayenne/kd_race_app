# File: docker-compose.yml
# Version: v0.7.39 ‚Äì Restore builder flow using bind mount copy

services:
  # üöÄ Frontend build stage (for one-off use)
  kd_frontend:
    build:
      context: .  # üîß Full access from root
      dockerfile: frontend/Dockerfile
    volumes:
      - ./frontend_dist_temp:/app/frontend/dist:ro  # ‚úÖ Temporary build output

  # üì¶ Copy built frontend assets into final mount directory
  kd_copy_frontend:
    image: alpine
    depends_on:
      - kd_frontend
    volumes:
      - ./volumes/kd_race_app_dist_build:/target
      - ./frontend_dist_temp:/source:ro
    entrypoint: ["sh", "-c"]
    command: >
      echo 'üîç Copying dist files...' &&
      rm -rf /target/* &&
      cp -r /source/* /target/ &&
      echo '‚úÖ Copy complete'

  # üîß Backend API
  kd_api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./volumes/kd_race_app_dist_build:/app/public
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://derby_admin:${DB_PASS}@192.168.50.209:5432/derby
      - API_ADMIN_PASS=${API_ADMIN_PASS}
    restart: unless-stopped
    networks:
      - kd_net

  # üåê Nginx reverse proxy
  kd_nginx:
    image: nginx:alpine
    container_name: kd_race_app-kd_nginx-1
    ports:
      - "8086:80"
    volumes:
      - ./volumes/kd_race_app_dist_build:/usr/share/nginx/html:ro  # ‚úÖ Bind mount for live preview
      - ./nginx/kd.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks:
      - kd_net

networks:
  kd_net:
    driver: bridge