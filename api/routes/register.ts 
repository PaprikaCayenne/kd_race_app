// File: api/routes/register.ts
// Version: v1.1.0 â€” Adds /register/check with CORS + headers

import express from 'express';
import prisma from '../lib/prisma';

const router = express.Router();

// ðŸ†• Check if deviceId is already registered
router.get('/register/check', async (req, res) => {
  const { deviceId } = req.query;

  // Basic input validation
  if (!deviceId || typeof deviceId !== 'string') {
    return res.status(400).json({ error: 'Missing or invalid deviceId' });
  }

  try {
    const existing = await prisma.user.findUnique({ where: { deviceId } });

    res.setHeader('Cache-Control', 'no-store');
    res.setHeader('Content-Type', 'application/json');
    res.setHeader('Access-Control-Allow-Origin', '*'); // You can restrict to your domain
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');

    res.status(200).json({ registered: !!existing });
  } catch (err) {
    console.error('[register/check] Failed to query deviceId:', err);
    res.status(500).json({ error: 'Internal server error' });
  }
});

export default router;
